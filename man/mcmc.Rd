% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.r
\name{mcmc}
\alias{mcmc}
\title{MCMC for BayesMP}
\usage{
mcmc(Z, gamma, beta = 1/2, alpha = 1, mu0 = 0, sigma0 = 10, sigma = 1,
  trunc = 0, Pi = NULL, delta = NULL, Y = NULL, niter = 100,
  burnin = 50, fileName = "BayesMP_mcmc", fullRes = 1, HSall = 1)
}
\arguments{
\item{Z}{Z statistics. Z should be a p*n matrix.}

\item{beta}{Non-informative prior: given a gene is DE, the prior probablity this gene is up-regulated, default=1/2}

\item{alpha}{Concentration parameter for DPs, default=1}

\item{mu0}{Mean parameter for base function, default=0}

\item{sigma0}{sqrt root of variance parameter for base function, default=10}

\item{sigma}{sqrt root of variance parameter for DP mixture component, default=1}

\item{trunc}{truncation parameter for base function (For both positive component and negative component), default=0}

\item{Pi}{initial pi (DE probablity vector), default rbeta(G, estGamma/(G-estGamma), 1)}

\item{delta}{initial delta (DE direction probablity vector), default rbeta(G, beta, beta)}

\item{Y}{initial component indicator. Y should be a p*n matrix. Y = ..., -2, -1, 0, 1, 2, ...}

\item{niter}{Number of iterations. Default 100, suggest to be 10,000}

\item{burnin}{Number of burnin period. Default 50, suggest to be 500}

\item{fileName}{Base fileName for saving fulll mcmc results, hypothesis HS results.}

\item{fullRes}{binary: 0: do not save full mcmc results; 1: save full mcmc results.}

\item{HSall}{binary: 0: do not save hypothesis HS results; 1: save hypothesis HS results.}

\item{initial}{gamma Estimated null proportation.}
}
\value{
computing time
}
\description{
BayesMP
}
\details{
implementation for BayesMP, MCMC part
}
\examples{
n1 <- 1000
n2 <- 100
S <- 3
set.seed(15213)
aZ <- c(rnorm(n1),rnorm(n2,3)*sample(c(1,-1),n2,replace=TRUE))
set.seed(15214)
bZ <- c(rnorm(n1),rnorm(n2,3)*sample(c(1,-1),n2,replace=TRUE))
set.seed(15215)
cZ <- c(rnorm(n1),rnorm(n2,3)*sample(c(1,-1),n2,replace=TRUE))
Z <- cbind(aZ, bZ, cZ)
G <- nrow(Z)
w <- locfdr(Z, plot=0)
estGamma <- 1 - w$fp0["mlest", "p0"]
estMu <- apply(Z,2,function(x) locfdr(x)$fp0["mlest", "delta"])
estSigma <- apply(Z,2,function(x) locfdr(x)$fp0["mlest", "sigma"])
mcmc(Z, estGamma)
}
\author{
Zhiguang Huo
}

